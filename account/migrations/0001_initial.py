# Generated by Django 4.0 on 2023-04-05 10:35

import account.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('icon', models.FileField(blank=True, null=True, upload_to='category_icons/')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('color', models.CharField(blank=True, max_length=255, null=True)),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('position', models.BigIntegerField()),
                ('has_children', models.BooleanField(default=False)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_categories', to='account.category')),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('product_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('long_description', models.TextField(blank=True, null=True)),
                ('SKU', models.CharField(blank=True, max_length=255, null=True)),
                ('condition', models.CharField(choices=[('used', 'used'), ('new', 'new')], default='new', max_length=255)),
                ('condition_notes', models.TextField(blank=True, null=True)),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('prouduct_identifier', models.CharField(blank=True, max_length=255, null=True)),
                ('prouduct_identifier_type', models.CharField(blank=True, choices=[('EAN', 'EAN'), ('GCID', 'GCID'), ('ASIN', 'ASIN'), ('UPC', 'UPC'), ('ISBN', 'ISBN')], max_length=255, null=True)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('msrp', models.FloatField(blank=True, null=True)),
                ('original_price', models.FloatField()),
                ('net_price', models.FloatField()),
                ('publish_price', models.FloatField()),
                ('weight', models.FloatField(blank=True, null=True)),
                ('weight_unit', models.CharField(blank=True, choices=[('Oz', 'Oz'), ('pounds', 'pounds'), ('kilograms', 'kilograms')], max_length=255, null=True)),
                ('package_length', models.FloatField(blank=True, null=True)),
                ('package_width', models.FloatField(blank=True, null=True)),
                ('package_heigth', models.FloatField(blank=True, null=True)),
                ('dimension_type', models.CharField(blank=True, choices=[('inches', 'inches'), ('centimeters', 'centimeters')], max_length=255, null=True)),
                ('status', models.BooleanField(default=True)),
                ('category', models.ManyToManyField(related_name='products', to='account.Category')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='variations', to='account.product')),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='ProductSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('details', models.CharField(max_length=255)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='specifications', to='account.product')),
            ],
            options={
                'db_table': 'product_specification',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(upload_to=account.models.upload_image_to)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='account.product')),
            ],
            options={
                'db_table': 'product_image',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('password', models.CharField(max_length=255)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(help_text='Enter name', max_length=40, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only characters are allowed.')])),
                ('last_name', models.CharField(help_text='Enter name', max_length=40, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only characters are allowed.')])),
                ('birthdate', models.DateField()),
                ('id_cards', models.BigIntegerField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
        ),
    ]
